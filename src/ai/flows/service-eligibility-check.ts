
// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Flow for checking service eligibility based on PIN code or city.
 *
 * - checkServiceEligibility - A function that checks the service eligibility.
 * - ServiceEligibilityInput - The input type for the checkServiceEligibility function.
 * - ServiceEligibilityOutput - The return type for the checkServiceEligibility function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const ServiceEligibilityInputSchema = z.object({
  location: z
    .string()
    .describe('User input, which might be a PIN code, city, or a general query about eligibility.'),
});
export type ServiceEligibilityInput = z.infer<typeof ServiceEligibilityInputSchema>;

const ServiceEligibilityOutputSchema = z.object({
  isEligible: z.boolean().describe('Whether T-Fiber service is available in the specified area. Set to false if input is not a location or if guiding user.'),
  details: z
    .string()
    .describe(
      'Information about service availability, reasons for ineligibility, or guidance on how to provide a location for checking.'
    ),
});
export type ServiceEligibilityOutput = z.infer<typeof ServiceEligibilityOutputSchema>;

export async function checkServiceEligibility(
  input: ServiceEligibilityInput
): Promise<ServiceEligibilityOutput> {
  return checkServiceEligibilityFlow(input);
}

const prompt = ai.definePrompt({
  name: 'serviceEligibilityPrompt',
  input: {schema: ServiceEligibilityInputSchema},
  output: {schema: ServiceEligibilityOutputSchema},
  prompt: `You are a T-Fiber customer service representative. Your task is to check service eligibility based on user input.

User input: "{{{location}}}"

Analyze the input:
1. Does the input appear to be a specific location like a PIN code (e.g., 6 digits) or a clear city/town/village name relevant to Telangana, India?
2. Or, is the user asking a general question about how to check eligibility, or providing non-location text (e.g., "hello", "what are your plans?")?

If the input seems to be a specific location (PIN or city/town/village):
- Determine if T-Fiber service is available in that area. Assume T-Fiber is available in major cities like Hyderabad, Warangal, Karimnagar, and Nizamabad, and PIN codes starting with 500, 505, 506. For other locations, assume it's not available yet unless explicitly stated as available.
- Return a JSON object with 'isEligible' (true or false) and 'details'.
- If service is available, 'details' should confirm this (e.g., "Good news! T-Fiber is available in [location].") and can mention that plan details are on the website.
- If service is not available, 'details' should explain why (e.g., "Sorry, T-Fiber is not yet available in [location]. We are expanding our network and hope to serve your area soon.").
- Example for available: { "isEligible": true, "details": "Good news! T-Fiber is available in Hyderabad. You can find available plans on our website." }
- Example for not available: { "isEligible": false, "details": "Sorry, T-Fiber is not yet available for Pincode 123456. We are working on expanding our network." }

If the input does NOT seem to be a specific location, OR if the user is asking generally about checking eligibility (e.g., "how to check?", "availability?"), OR if the input is too vague or clearly not a location:
- Respond by guiding the user on how to provide a location for checking.
- Return a JSON object like: { "isEligible": false, "details": "To check service availability, please provide your PIN code or City/Town/Village name." }
- In this case, 'isEligible' must be false as no specific check was performed or could be performed.

User input to process: {{{location}}}
  `,
});

const checkServiceEligibilityFlow = ai.defineFlow(
  {
    name: 'checkServiceEligibilityFlow',
    inputSchema: ServiceEligibilityInputSchema,
    outputSchema: ServiceEligibilityOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);

